<?xml version="1.0" encoding="UTF-8"?>
<!--
    작성자 : 고의동
    작성내용 : XML 태그 내용 정의
-->

<!-- scan="true"이면 30초 마다 파일 변경을 확인합니다 -->
<configuration scan="true" scanPeriod="30 seconds">
    <!-- LOGS_PATH라는 프로퍼티에 ./logs라는 값을 할당합니다. -->
    <property name="LOGS_PATH" value="apiparking/logs"/>
    <!--
    로그 클래스의 설명
    콘솔에서 출력할 경우 : ch.qos.logback.core.ConsoleAppender 클래스 사용
    파일에서 출력할 경우 : ch.qos.logback.core.rolling.RollingFileAppender 클래스 사용
    메일로 찍을 경우 : ch.qos.logback.classic.net.SMTPAppender
    디비로 찍을 경우 : 설정값이 다소 필요하므로 생략
    -->

    <!-- 콘솔 로그 설정 START
         appender name은 로깅 주체를 판단하기 위해 사용되며 콘솔 로그 설정이므로 ch.qos.logback.core.ConsoleAppender 클래스 사용
    -->
    <appender name="APTICONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}[%-5level] : %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 콘솔 로그 설정 END-->

    <!-- 파일 로그 설정 START
        appender name은 로깅 주체를 판단하기 위해 사용되며 콘솔 로그 설정이므로 ch.qos.logback.core.rolling.RollingFileAppender 클래스 사용
    -->
    <appender name="APTIROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 로그파일 레벨 및 파일 형식 설정 START-->
        <encoder>
            <pattern>[%-5level] %d{HH:mm:ss.SSS} %logger{36} - %msg%n</pattern>
        </encoder>
        <!-- 로그파일 레벨 및 파일 형식 설정 END -->

        <!-- 로그파일패스 및 이름 설정 -->
        <file>${LOGS_PATH}/Parking-API-Prod.log</file>
        <!-- 로그롤링파일설정 START
        롤링파일이란? : 로컬 시간 기준 일자가 변경된 경우(오전 12시) 생성된 로그 파일을 설정된 형태로 보관하고 새로운 로그파일 생성-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--로그롤링파일패스 및 이름 설정
                ${LOGS_PATH}/APU-Server-Main-%d{yyyy-MM-dd}.%i.log : 일반 형태의 파일 형태로 설정
                ${LOGS_PATH}/logback.%d{yyyy-MM-dd}.%i.log.gz : 리눅스 형태의 압축 파일 형태로 설정
                롤링파일 포맷 설정 START
            -->
            <fileNamePattern>${LOGS_PATH}/Parking-API-Prod-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 90일이 지난 파일은 삭제 처리 -->
            <maxHistory>90</maxHistory>
            <!-- ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP 클래스를 통해 파일 사이즈 및 롤링 파일 생성 시간 설정 -->
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 파일 사이즈 -->
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 로그롤링파일설정 END -->
    </appender>
    <!-- 파일 로그 설정 END-->

    <!--
    - TRACE : 추적 레벨은 Debug보다 좀더 상세한 정보를 나타냅니다.
    - DEBUG : 프로그램을 디버깅하기 위한 정보를 표시합니다. (운영서버에서는 표시하지 않도록 설정함)
    - INFO  : 상태변경과 같은 정보성 로그를 표시합니다.
    - WARN  : 처리 가능한 문제, 향후 시스템 에러의 원인이 될 수 있는 경고성 메시지를 나타냄
    - ERROR : 요청을 처리하는 중 오류가 발생한 경우 표시합니다
    - FATAL : 최상의 에러로 시스템에서 처리되는 내용.
    -->
    <!-- 로깅 레벨 설정 START
    Logger 태그 통해서 주체를 설정하지 않은 경우에 대해서 정의
    각 주체별로 로깅 기능 설정등이 필요할 경우 작성 필요
    -->
    <root level="INFO">
        <appender-ref ref="APTICONSOLE"/>
        <appender-ref ref="APTIROLLING"/>
    </root>
    <!-- 로깅 레벨 설정 END -->
</configuration>